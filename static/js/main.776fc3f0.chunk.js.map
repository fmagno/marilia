{"version":3,"sources":["components/HeroHeader/smile_face.jpg","components/HeroHeader/smile_face_rect.jpg","components/Gallery/Gallery.module.scss","components/HeroHeader/Navbar.js","components/HeroHeader/Hero.js","components/HeroHeader/index.js","components/HeroHeader/HeroHeader.js","components/Gallery/GalleryItem.js","components/Gallery/index.js","components/Gallery/Gallery.js","components/Footer/index.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Fragment","className","classNames","uk-navbar","href","Hero","id","src","face","alt","uk-scrollspy","face_sm","HeroHeader","GalleryItem","Gallery","props","galleryStyles","gallerySection","Footer","App","Boolean","window","location","hostname","match","UIkit","use","Icons","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCC3CD,EAAOC,QAAU,CAAC,eAAiB,kC,uTCGpB,SAASC,IACtB,OACE,kBAAC,IAAMC,SAAP,KAGE,yBAAKC,UAAWC,IAAW,sBAAuB,OAAQC,YAAU,IAClE,yBAAKF,UAAU,kBACb,wBAAIA,UAAU,iBAEZ,4BACE,uBAAGG,KAAK,YAAR,YAEF,4BACE,uBAAGA,KAAK,UAAR,c,0CCwBCC,EApCF,WAGX,OACE,iCACE,yBACEC,GAAG,OACHC,IAAKC,IACLC,IAAI,2BACJC,eAAA,sDARW,UAUb,yBACEJ,GAAG,UACHC,IAAKI,IACLF,IAAI,2BACJC,eAAA,sDAdW,UAiBb,wBACEJ,GAAG,QAEHI,eAAa,qCAHf,sBAOA,wBACEJ,GAAG,WAEHI,eAAa,sCAHf,aC5BSE,MCIA,WACb,OACE,kBAAC,IAAMZ,SAAP,KACE,4BAAQM,GAAG,8BACT,kBAAC,EAAD,CAAQA,GAAG,iCACX,kBAAC,EAAD,CAAMA,GAAG,kC,sBCRF,SAASO,IACtB,OACE,kBAAC,IAAMb,SAAP,KACE,iCACE,wBACEC,UAAU,yCADZ,gBAMA,uBAAGA,UAAU,yCAAb,0CAIA,yBAAKA,UAAU,WACb,yBACEA,UAAU,SACVS,eAAa,oDAFf,UAMA,yBACET,UAAU,SACVS,eAAa,oDAFf,UAMA,yBACET,UAAU,SACVS,eAAa,oDAFf,UAMA,yBACET,UAAU,SACVS,eAAa,oDAFf,aClCKI,MCEA,SAAiBC,GAAQ,IAC9BT,EAAOS,EAAPT,GACR,OACE,kBAAC,IAAMN,SAAP,KAEE,6BAASM,GAAIA,EAAIL,UAAWe,IAAcC,gBACxC,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTOC,G,MCCA,WACb,OACE,kBAAC,IAAMlB,SAAP,KACE,+CCWSmB,MAVf,WACE,OACE,kBAAC,IAAMnB,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASM,GAAG,YACZ,kBAAC,EAAD,QCAcc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCLNC,IAAMC,IAAIC,KAKVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.776fc3f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smile_face.25968b9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smile_face_rect.74f9126c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallerySection\":\"Gallery_gallerySection__2CHOS\"};","import React from \"react\";\nimport \"./Navbar.scss\";\nimport classNames from \"classnames\";\n\nexport default function Navbar() {\n  return (\n    <React.Fragment>\n      {/* <nav class=\"uk-navbar-container uk-navbar-transparent\" uk-navbar> */}\n      {/* <nav class=\"uk-navbar-container\" className={classes.nav} uk-navbar> */}\n      <nav className={classNames(\"uk-navbar-container\", \"nav\")} uk-navbar=\"\">\n        <div className=\"uk-navbar-left\">\n          <ul className=\"uk-navbar-nav\">\n            {/* <li class=\"uk-active\"> */}\n            <li>\n              <a href=\"#gallery\">Gallery</a>\n            </li>\n            <li>\n              <a href=\"#about\">About</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./Hero.scss\";\nimport face from \"./smile_face.jpg\";\nimport face_sm from \"./smile_face_rect.jpg\";\n\nconst Hero = () => {\n  const imgDelay = \"2500\";\n\n  return (\n    <article>\n      <img\n        id=\"face\"\n        src={face}\n        alt=\"Marília Freitas' face\"\n        uk-scrollspy={`cls:uk-animation-slide-bottom-small; delay: ${imgDelay}`}\n      />\n      <img\n        id=\"face_sm\"\n        src={face_sm}\n        alt=\"Marília Freitas' face\"\n        uk-scrollspy={`cls:uk-animation-slide-bottom-small; delay: ${imgDelay}`}\n      />\n\n      <h1\n        id=\"title\"\n        // className=\"uk-heading-2xlarge\"\n        uk-scrollspy=\"cls:uk-animation-fade; delay: 500\"\n      >\n        Marília Freitas\n      </h1>\n      <h1\n        id=\"subtitle\"\n        // className=\"uk-heading-medium\"\n        uk-scrollspy=\"cls:uk-animation-fade; delay: 1500\"\n      >\n        Dentist\n      </h1>\n    </article>\n  );\n};\n\nexport default Hero;\n","import HeroHeader from \"./HeroHeader\";\n\nexport default HeroHeader;\n","import React from \"react\";\nimport \"./HeroHeader.scss\";\n\nimport Navbar from \"./Navbar\";\nimport Hero from \"./Hero\";\n\nexport default function HeroHeader() {\n  return (\n    <React.Fragment>\n      <header id=\"hero-header-flex-container\">\n        <Navbar id=\"hero-header-navbar-flex-item\" />\n        <Hero id=\"hero-header-hero-flex-item\" />\n      </header>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./GalleryItem.scss\";\n\nexport default function GalleryItem() {\n  return (\n    <React.Fragment>\n      <section>\n        <h1\n          className=\"uk-heading-small gallery-item-heading\"\n          // uk-scrollspy=\"cls:uk-animation-fade; delay: 500\"\n        >\n          Gallery item\n        </h1>\n        <p className=\"uk-text-lead gallery-item-description\">\n          Some text describing the clinical case\n        </p>\n\n        <div className=\"wrapper\">\n          <div\n            className=\"photo1\"\n            uk-scrollspy=\"cls:uk-animation-slide-bottom-small; delay: 1000\"\n          >\n            photo1\n          </div>\n          <div\n            className=\"photo2\"\n            uk-scrollspy=\"cls:uk-animation-slide-bottom-small; delay: 1000\"\n          >\n            photo2\n          </div>\n          <div\n            className=\"photo3\"\n            uk-scrollspy=\"cls:uk-animation-slide-bottom-small; delay: 1000\"\n          >\n            photo3\n          </div>\n          <div\n            className=\"photo4\"\n            uk-scrollspy=\"cls:uk-animation-slide-bottom-small; delay: 1000\"\n          >\n            photo4\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n","import Gallery from \"./Gallery\";\n\nexport default Gallery;\n","import React from \"react\";\nimport galleryStyles from \"./Gallery.module.scss\";\nimport GalleryItem from \"./GalleryItem\";\n\nexport default function Gallery(props) {\n  const { id } = props;\n  return (\n    <React.Fragment>\n      {/* <section id={id} className={galleryStyles.section}> */}\n      <section id={id} className={galleryStyles.gallerySection}>\n        <GalleryItem />\n        <GalleryItem />\n      </section>\n    </React.Fragment>\n  );\n}\n","import Footer from \"./Footer\";\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      <footer>A footer</footer>\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HeroHeader from \"./components/HeroHeader\";\nimport Gallery from \"./components/Gallery\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <HeroHeader />\n      <Gallery id=\"gallery\" />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\n\nimport \"./uikitTheme.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// // loads the Icon plugin\nUIkit.use(Icons);\n\n// components can be called from the imported UIkit reference\n// UIkit.notification(\"Hello world.\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}